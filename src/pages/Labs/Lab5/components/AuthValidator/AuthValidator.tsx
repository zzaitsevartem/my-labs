import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './AuthValidator.module.scss';

const AuthValidator: React.FC = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    username: '',
    password: '',
    role: 'guest'
  });
  const [errors, setErrors] = useState<string[]>([]);

  const validateForm = (): boolean => {
    const newErrors: string[] = [];

    if (!formData.username.trim()) {
      newErrors.push('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    if (formData.role === 'friend' && formData.password !== 'lheu') {
      newErrors.push('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –¥—Ä—É–≥–∞');
    }

    if (formData.role === 'acquaintance' && formData.password !== 'pyfrjvsq') {
      newErrors.push('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –∑–Ω–∞–∫–æ–º–æ–≥–æ');
    }

    if (formData.role === 'guest' && !formData.password) {
      newErrors.push('–ì–æ—Å—Ç—è–º —Ç–æ–∂–µ –Ω—É–∂–µ–Ω –ø–∞—Ä–æ–ª—å');
    }

    setErrors(newErrors);
    return newErrors.length === 0;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (validateForm()) {
      switch (formData.role) {
        case 'friend':
          navigate('/friends');
          break;
        case 'acquaintance':
          navigate('/acquaintances');
          break;
        case 'guest':
          navigate('/guests');
          break;
      }
    }
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  return (
    <div className={styles.section}>
      <h2>üîê –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h2>
      
      {errors.length > 0 && (
        <div className={styles.errors}>
          {errors.map((error, index) => (
            <p key={index}>‚ùå {error}</p>
          ))}
        </div>
      )}

      <form onSubmit={handleSubmit} className={styles.form}>
        <div className={styles.formGroup}>
          <label>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
          <input
            type="text"
            name="username"
            value={formData.username}
            onChange={handleChange}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
          />
        </div>

        <div className={styles.formGroup}>
          <label>–ü–∞—Ä–æ–ª—å:</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          />
          <div className={styles.passwordHints}>
            <small>–î–ª—è –¥—Ä—É–∑–µ–π: lheu</small>
            <small>–î–ª—è –∑–Ω–∞–∫–æ–º—ã—Ö: pyfrjvsq</small>
            <small>–î–ª—è –≥–æ—Å—Ç–µ–π: –ª—é–±–æ–π –ø–∞—Ä–æ–ª—å</small>
          </div>
        </div>

        <div className={styles.formGroup}>
          <label>–†–æ–ª—å:</label>
          <div className={styles.radioGroup}>
            <label className={styles.radioLabel}>
              <input
                type="radio"
                name="role"
                value="friend"
                checked={formData.role === 'friend'}
                onChange={handleChange}
              />
              –î—Ä—É–≥
            </label>
            <label className={styles.radioLabel}>
              <input
                type="radio"
                name="role"
                value="acquaintance"
                checked={formData.role === 'acquaintance'}
                onChange={handleChange}
              />
              –ó–Ω–∞–∫–æ–º—ã–π
            </label>
            <label className={styles.radioLabel}>
              <input
                type="radio"
                name="role"
                value="guest"
                checked={formData.role === 'guest'}
                onChange={handleChange}
              />
              –ì–æ—Å—Ç—å
            </label>
          </div>
        </div>

        <button type="submit" className={styles.submitButton}>
          –í–æ–π—Ç–∏
        </button>
      </form>
    </div>
  );
};

export default AuthValidator;